
   
   
      
         
            What Is Source Code?
            

            Among the legal remedies being considered in the Microsoft antitrust trial
 is a court order that would force the company to reveal the "source code" for
 part or all of its Windows operating system. What exactly does this mean?

            Source code is simply the human-readable version of the computer commands
 that make up a program. It is the letters and symbols that software engineers
 type into their computers when they create an application or operating system.
 For example, if a C++ programmer wrote a program to make his computer display
 the words, "Hello, World," the source code might look like this:

            #include iostream.h
 void main()
 {
 cout<<"Hello, World";
 }

            Although these commands are intelligible to engineers, they are useless to
 computers, which understand only ones and zeros. So, to make the source code
 into a functioning program, translation software (called a "compiler") must
 convert it into the binary "object code" that computers can process.

            Open source software, such as the Linux operating system, makes both the
 object code and the source code freely available so that any programmer can
 figure out how the program is constructed and then alter it to his
 satisfaction. But closed source software, such as Windows and most commercial
 programs, is shipped with the object code only. Software companies argue that
 source code contains valuable intellectual property that must be protected. One
 common analogy compares source code to the formula for Coca-Cola: The Coca-Cola
 Co. ships only bottles of Coke to its customers, not the formula for the drink,
 because it doesn't want competitors to brew knock-offs or use the formula to
 improve their drinks.

            With software, "decompilers"--or, reverse-translation programs--can
 theoretically convert object code back into source code. But their inaccuracies
 render them largely ineffective.
